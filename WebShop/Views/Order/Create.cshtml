@model WebShop.Models.OrderViewModel

@using (Html.BeginForm("Create", "Order", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <h2>Delivery Details</h2>
    <div class="form-group">
        @Html.LabelFor(model => model.Delivery.DeliveredTo)
        @Html.TextBoxFor(model => model.Delivery.DeliveredTo, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Delivery.DeliveredTo)
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Delivery.DeliveryDate)
        @Html.TextBoxFor(model => model.Delivery.DeliveryDate, "{0:yyyy-MM-dd}", new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Delivery.DeliveryDate)
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Delivery.AccountID)
        @Html.TextBoxFor(model => model.Delivery.AccountID, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Delivery.AccountID)
    </div>

    <h2>Product Lines</h2>
    <div id="product-lines">
        @for (int i = 0; i < Model.ProductLines.Count; i++)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.ProductLines[i].ProductID)
                @Html.TextBoxFor(model => model.ProductLines[i].ProductID, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProductLines[i].ProductID)
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.ProductLines[i].Quantity)
                @Html.TextBoxFor(model => model.ProductLines[i].Quantity, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProductLines[i].Quantity)
            </div>
        }
    </div>

    <button type="button" id="add-product-line" class="btn btn-secondary">Add Product Line</button>
    <button type="submit" class="btn btn-primary">Submit</button>
}

@section Scripts {
    <script>
        document.getElementById('add-product-line').addEventListener('click', function () {
            var productLinesDiv = document.getElementById('product-lines');
            var index = productLinesDiv.children.length / 2;

            var productIdDiv = document.createElement('div');
            productIdDiv.className = 'form-group';
            var productIdLabel = document.createElement('label');
            productIdLabel.htmlFor = `ProductLines_${index}__ProductID`;
            productIdLabel.textContent = 'Product ID';
            var productIdInput = document.createElement('input');
            productIdInput.type = 'text';
            productIdInput.name = `ProductLines[${index}].ProductID`;
            productIdInput.id = `ProductLines_${index}__ProductID`;
            productIdInput.className = 'form-control';
            productIdDiv.appendChild(productIdLabel);
            productIdDiv.appendChild(productIdInput);

            var quantityDiv = document.createElement('div');
            quantityDiv.className = 'form-group';
            var quantityLabel = document.createElement('label');
            quantityLabel.htmlFor = `ProductLines_${index}__Quantity`;
            quantityLabel.textContent = 'Quantity';
            var quantityInput = document.createElement('input');
            quantityInput.type = 'text';
            quantityInput.name = `ProductLines[${index}].Quantity`;
            quantityInput.id = `ProductLines_${index}__Quantity`;
            quantityInput.className = 'form-control';
            quantityDiv.appendChild(quantityLabel);
            quantityDiv.appendChild(quantityInput);

            productLinesDiv.appendChild(productIdDiv);
            productLinesDiv.appendChild(quantityDiv);
        });
    </script>
}
